name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  IMAGE_NAME: go-session-server
  DOCKER_FILE_PATH: docker/Dockerfile
  INFRASTRUCTURE_BUILD_ARTEFACT_NAME: infrastructure-build-artifact
  INFRASTRUCTURE_BUILD_ARTEFACT_PATH: infrastructure/cdktf.out
  APPLICATION_BUILD_ARTIFACT_NAME: go-session-server-build-artifact
  APPLICATION_BUILD_ARTIFACT_PATH: target

jobs:
  # TODO: Move base infrastructure to a dedicated workflow
  buildInfrastructure:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: yarn install --frozen-lockfile
        working-directory: infrastructure

      - name: Build infrastructure
        run: yarn run build
        working-directory: infrastructure

      - name: Archive build artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.INFRASTRUCTURE_BUILD_ARTEFACT_NAME }}
          path: ${{ env.INFRASTRUCTURE_BUILD_ARTEFACT_PATH }}

  buildApplication:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 16
        uses: actions/setup-java@v2
        with:
          java-version: '16'
          distribution: 'adopt'

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Archive build artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.APPLICATION_BUILD_ARTIFACT_NAME }}
          path: ${{ env.APPLICATION_BUILD_ARTIFACT_PATH }}

  pushToDockerHub:

    runs-on: ubuntu-latest
    needs: [ buildApplication, buildInfrastructure ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.APPLICATION_BUILD_ARTIFACT_NAME }}
          path: ${{ env.APPLICATION_BUILD_ARTIFACT_PATH }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Push to Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          file: ${{ env.DOCKER_FILE_PATH }}
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest

  pushToGoogleCloud:

    runs-on: ubuntu-latest
    needs: [ buildApplication, buildInfrastructure ]

    env:
      LOCATION: europe-west1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.APPLICATION_BUILD_ARTIFACT_NAME }}
          path: ${{ env.APPLICATION_BUILD_ARTIFACT_PATH }}

      - name: Login to Google Cloud
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          service_account_key: ${{ secrets.GCLOUD_SA_KEY }}
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          export_default_credentials: true

      - name: Configure Docker Client
        run: |-
          gcloud auth configure-docker ${{ env.LOCATION }}-docker.pkg.dev --quiet

      - uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          file: ${{ env.DOCKER_FILE_PATH }}
          tags: |
            ${{ env.LOCATION }}-docker.pkg.dev/${{ vars.GCLOUD_PROJECT_ID }}/go-services/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.LOCATION }}-docker.pkg.dev/${{ vars.GCLOUD_PROJECT_ID }}/go-services/${{ env.IMAGE_NAME }}:latest

  deployInfrastructure:
    runs-on: ubuntu-latest
    needs: pushToGoogleCloud

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.INFRASTRUCTURE_BUILD_ARTEFACT_NAME }}
          path: ${{ env.INFRASTRUCTURE_BUILD_ARTEFACT_PATH }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.6.2"

      - name: Login to Google Cloud
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          service_account_key: ${{ secrets.GCLOUD_SA_KEY }}
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          export_default_credentials: true

      - name: Deploy Container Registry
        env:
          STACK: container-registry
        run: |
          yarn run deploy \
            -var base64-encoded-google-credentials=${{ secrets.GCLOUD_SA_KEY_BASE64 }} \
            -var google-project=${{ vars.GCLOUD_PROJECT_ID }} \
            --auto-approve
        working-directory: infrastructure

  deployApplication:
    runs-on: ubuntu-latest
    needs: pushToGoogleCloud

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.INFRASTRUCTURE_BUILD_ARTEFACT_NAME }}
          path: ${{ env.INFRASTRUCTURE_BUILD_ARTEFACT_PATH }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.6.2"

      - name: Login to Google Cloud
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          service_account_key: ${{ secrets.GCLOUD_SA_KEY }}
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          export_default_credentials: true

      - name: Deploy Application
        env:
          STACK: go-session-server
        run: |
          yarn run deploy \
            -var base64-encoded-google-credentials=${{ secrets.GCLOUD_SA_KEY_BASE64 }} \
            -var google-project=${{ vars.GCLOUD_PROJECT_ID }} \
            -var git-hash=${{ github.sha }} \
            --auto-approve
        working-directory: infrastructure
